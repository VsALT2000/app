{"version":3,"sources":["components/Messages/MessageConstructor/MessageConstructor.module.css","components/Messages/Messages.module.css","components/Messages/Dialog/Dialog.module.css","components/Messages/MessageConstructor/Message/Message.module.css","components/Messages/Dialog/Dialog.js","components/Messages/MessageConstructor/Message/Message.js","components/Messages/MessageConstructor/MessageForm.js","components/Messages/MessageConstructor/MessageConstructor.js","components/Messages/Messages.js","hoc/LoginRedirect.js"],"names":["module","exports","Dialog","props","className","classes","dialog","activeClassName","active","to","data","id","avatar","dialog_avatar","image","src","alt","dialogName_container","dialogName","name","Message","container","message","reduxForm","form","new_message","onSubmit","handleSubmit","Field","component","textarea","placeholder","button_container","send_button","MessageConstructor","messages","messages_items","messageUser","map","m","isYouMess","you_message","text","after","friend_message","mess","newMessageBody","replace","addMess","EmptyMessageWindow","emptyMessageWindow","compose","connect","state","dialogData","messagesData","messageData","isAuth","auth","Component","RedirectComponent","this","React","dialog_items","d","exact","path","render"],"mappings":"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","file":"static/js/4.dfae2989.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"MessageConstructor_messages__26hYq\",\"messages_items\":\"MessageConstructor_messages_items__1LjSd\",\"you_message\":\"MessageConstructor_you_message__2fPI0\",\"friend_message\":\"MessageConstructor_friend_message__1bI1P\",\"after\":\"MessageConstructor_after__3uvgR\",\"new_message\":\"MessageConstructor_new_message__3R25E\",\"textarea\":\"MessageConstructor_textarea__3wuTv App_textarea__3q8qW\",\"button_container\":\"MessageConstructor_button_container__EFdzq\",\"send_button\":\"MessageConstructor_send_button__1gOXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Messages_container__3ojkh\",\"dialog_items\":\"Messages_dialog_items__3nvZD\",\"after\":\"Messages_after__3EimW\",\"emptyMessageWindow\":\"Messages_emptyMessageWindow__qsfyq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__-XP67\",\"active\":\"Dialog_active__1-1uV\",\"avatar\":\"Dialog_avatar__1EFvo App_avatar__EAxxR\",\"dialog_avatar\":\"Dialog_dialog_avatar__1H9UB\",\"image\":\"Dialog_image__2_ui9 App_image__3Ywt2\",\"dialogName_container\":\"Dialog_dialogName_container__3-pcl\",\"dialogName\":\"Dialog_dialogName__30OhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__1mbPn\"};","import classes from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Dialog(props) {\r\n    return (\r\n        <NavLink className={classes.dialog} activeClassName={classes.active} to={`/messages/${props.data.id}`}>\r\n            <div className={`${classes.avatar} ${classes.dialog_avatar}`}>\r\n                <img className={classes.image} src={props.data.avatar} alt={\"avatar\"}/>\r\n            </div>\r\n            <div className={classes.dialogName_container}>\r\n                <div className={classes.dialogName}>\r\n                    {props.data.name}\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default Dialog;","import classes from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.container}>\r\n            <div>{props.message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import classes from \"./MessageConstructor.module.css\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form className={classes.new_message} onSubmit={props.handleSubmit}>\r\n            <Field component={\"textarea\"} name={\"newMessageBody\"}\r\n                   className={classes.textarea} placeholder={\"Type you message...\"}/>\r\n            <div className={classes.button_container}>\r\n                <button className={classes.send_button}>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({ form: \"dialogAddMessageForm\" }) (AddMessageForm);","import classes from \"./MessageConstructor.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport AddMessageForm from \"./MessageForm\";\r\n\r\nconst MessageConstructor = (props) => {\r\n    const onSubmit = (mess) => {\r\n        let text = mess.newMessageBody;\r\n        if (text && text.replace(/\\s+/g, '')) {\r\n            props.addMess(props.messageUser.id, text);\r\n            mess.newMessageBody = \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.messages}>\r\n            <div className={classes.messages_items}>\r\n                {props.messageUser.messages.map(m => {\r\n                    if (m.isYouMess) {\r\n                        return (\r\n                            <div className={classes.you_message}>\r\n                                <Message message={m.text}/>\r\n                                <div className={classes.after}/>\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <div className={classes.friend_message}>\r\n                                <Message message={m.text}/>\r\n                                <div className={classes.after}/>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n            <AddMessageForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageConstructor;","import classes from \"./Messages.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport MessageConstructor from \"./MessageConstructor/MessageConstructor\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMess} from \"../../redux/messagesReducer\";\r\nimport withLoginRedirect from \"../../hoc/LoginRedirect\";\r\n\r\nconst EmptyMessageWindow = () => {\r\n    return (\r\n        <div className={classes.emptyMessageWindow}>\r\n            Choose the dialog.\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.dialog_items}>\r\n                {props.dialogData.map(d => <Dialog data={d}/>)}\r\n                <div className={classes.after}/>\r\n            </div>\r\n            <Switch>\r\n                <Route exact path={\"/messages/\"} render={() => <EmptyMessageWindow/>}/>\r\n                {\r\n                    props.messageData.map((messageUser) =>\r\n                        <Route exact path={`/messages/${messageUser.id}`}\r\n                               render={() => <MessageConstructor addMess={props.addMess}\r\n                                                                 messageUser={messageUser}/>}/>)\r\n                }\r\n                <Route path={\"/\"}>\r\n                    <Redirect to={\"/404\"}/>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogData: state.messagesData.dialogData,\r\n        messageData: state.messagesData.messageData,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {addMess}), withLoginRedirect) (Messages);","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport default (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            return !this.props.isAuth ? <Redirect to={\"/login\"}/> : <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    return connect((state) => ({isAuth: state.auth.isAuth}))(RedirectComponent);\r\n}"],"sourceRoot":""}